<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="CommentTestInput" xml:space="preserve">
        <value># This is a full-line comment
key = "value"  # This is a comment at the end of a line
another = "# This is not a comment"</value>
    </data>
    <data name="BasicKVPTestInput" xml:space="preserve">
        <value>key = "value"</value>
    </data>
    <data name="UnspecifiedValueTestInput" xml:space="preserve">
        <value>key = # INVALID </value>
    </data>
    <data name="MultiplePairsOnOneLineTestInput" xml:space="preserve">
        <value>first = "Tom" last = "Preston-Werner" # INVALID</value>
    </data>
    <data name="NonSimpleKeysTestInput" xml:space="preserve">
        <value>key = "value"
bare_key = "value"
bare-key = "value"
1234 = "value"</value>
    </data>
    <data name="QuotedKeysTestInput" xml:space="preserve">
        <value>"127.0.0.1" = "value"
"character encoding" = "value"
"ʎǝʞ" = "value"
'key2' = "value"
'quoted "value"' = "value"</value>
    </data>
    <data name="EmptyKeyNameTestInput" xml:space="preserve">
        <value>= "no key name"  # INVALID</value>
    </data>
    <data name="BlankKeysAreAcceptedTestInput" xml:space="preserve">
        <value>"" = "blank"     # VALID but discouraged</value>
    </data>
    <data name="EscapedDoubleQuotedStringTestInput" xml:space="preserve">
        <value>str = "I'm a string. \"You can quote me\". Name\tJos\u00E9\nLocation\tSF."</value>
    </data>
    <data name="MultiLineSimpleStringTestInput" xml:space="preserve">
        <value>str1 = """
Roses are red
Violets are blue"""</value>
    </data>
    <data name="WhitespaceRemovalTestInput" xml:space="preserve">
        <value>str1 = "The quick brown fox jumps over the lazy dog."

str2 = """
The quick brown \


  fox jumps over \
    the lazy dog."""

str3 = """\
       The quick brown \
       fox jumps over \
       the lazy dog.\
       """</value>
    </data>
    <data name="DoubleQuotesInMultilineBasicTestInput" xml:space="preserve">
        <value>str4 = """Here are two quotation marks: "". Simple enough."""
str5 = """Here are three quotation marks: ""\"."""
str6 = """Here are fifteen quotation marks: ""\"""\"""\"""\"""\"."""

# "This," she said, "is just a pointless statement."
str7 = """"This," she said, "is just a pointless statement.""""</value>
    </data>
    <data name="LiteralStringTestInput" xml:space="preserve">
        <value>winpath  = 'C:\Users\nodejs\templates'
winpath2 = '\\ServerX\admin$\system32\'
quoted   = 'Tom "Dubs" Preston-Werner'
regex    = '&lt;\i\c*\s*&gt;'
empty = ''</value>
    </data>
    <data name="MultiLineLiteralStringTestInput" xml:space="preserve">
        <value>regex2 = '''I [dw]on't need \d{2} apples'''
lines  = '''
The first newline is
trimmed in raw strings.
   All other whitespace
   is preserved.
'''</value>
    </data>
    <data name="SingleQuotesInMultilineLiteralTestInput" xml:space="preserve">
        <value>quot15 = '''Here are fifteen quotation marks: """""""""""""""'''

# apos15 = '''Here are fifteen apostrophes: ''''''''''''''''''  # INVALID
apos15 = "Here are fifteen apostrophes: '''''''''''''''"

# 'That,' she said, 'is still pointless.'
str = ''''That,' she said, 'is still pointless.''''</value>
    </data>
    <data name="BasicIntegerTestInput" xml:space="preserve">
        <value>int1 = +99
int2 = 42
int3 = 0
int4 = -17</value>
    </data>
    <data name="UnderscoresInIntegersTestInput" xml:space="preserve">
        <value>int5 = 1_000
int6 = 5_349_221
int7 = 53_49_221  # Indian number system grouping
int8 = 1_2_3_4_5  # VALID but discouraged</value>
    </data>
    <data name="BasicFloatTestInput" xml:space="preserve">
        <value># fractional
flt1 = +1.0
flt2 = 3.1415
flt3 = -0.01

# exponent
flt4 = 5e+22
flt5 = 1e06
flt6 = -2E-2

# both
flt7 = 6.626e-34</value>
    </data>
    <data name="FloatWithUnderscoresTestInput" xml:space="preserve">
        <value>flt8 = 224_617.445_991_228</value>
    </data>
    <data name="FloatSpecialsTestInput" xml:space="preserve">
        <value># infinity
sf1 = inf  # positive infinity
sf2 = +inf # positive infinity
sf3 = -inf # negative infinity

# not a number
sf4 = nan  # actual sNaN/qNaN encoding is implementation-specific
sf5 = +nan # same as `nan`
sf6 = -nan # valid, actual encoding is implementation-specific</value>
    </data>
    <data name="BooleanTestInput" xml:space="preserve">
        <value>bool1 = true
bool2 = false</value>
    </data>
    <data name="OffsetDateTimeTestInput" xml:space="preserve">
        <value>odt1 = 1979-05-27T07:32:00Z
odt2 = 1979-05-27T00:32:00-07:00
odt3 = 1979-05-27T00:32:00.999999-07:00
odt4 = 1979-05-27 07:32:00Z</value>
    </data>
    <data name="LocalDateTimeTestInput" xml:space="preserve">
        <value>ldt1 = 1979-05-27T07:32:00
ldt2 = 1979-05-27T00:32:00.999999</value>
    </data>
    <data name="LocalDateTestInput" xml:space="preserve">
        <value>ld1 = 1979-05-27</value>
    </data>
    <data name="LocalTimeTestInput" xml:space="preserve">
        <value>lt1 = 07:32:00
lt2 = 00:32:00.999999</value>
    </data>
    <data name="PrimitiveArraysTestInput" xml:space="preserve">
        <value>integers = [ 1, 2, 3 ]
colors = [ "red", "yellow", "green" ]
string_array = [ "all", 'strings', """are the same""", '''type''' ]</value>
    </data>
    <data name="NestedArraysTestInput" xml:space="preserve">
        <value>nested_arrays_of_ints = [ [ 1, 2 ], [3, 4, 5] ]
nested_mixed_array = [ [ 1, 2 ], ["a", "b", "c"] ]</value>
    </data>
</root>